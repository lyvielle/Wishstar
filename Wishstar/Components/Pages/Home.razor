@rendermode InteractiveServer
@page "/wishlist"
@using System.Collections.ObjectModel
@using System.ComponentModel
@using Wishstar.Components.Pages.Context
@using Wishstar.Extensions
@using Wishstar.Models
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject HttpClient HttpClient

<PageTitle>💫 Wishstar</PageTitle>
<HeadContent>
	<link rel="stylesheet" href="styles/wishlist.styles.css">
</HeadContent>

@try
{
	<div class="container">
		<header>
			<div class="logo">💫 Wishstar</div>
			<div>
				<select class="currency-selector" @onchange="OnCurrencyChange">
					@foreach (var currency in CurrencyDescriptor.GetAllCurrencies())
					{
						<option>@currency.Code</option>
					}
				</select>
				@if (!IsLoggedIn)
				{
					<button class="login-btn" @onclick="ReferToLogin">Login</button>
				}
			</div>
		</header>

		<div class="controls">
			<input type="text" class="search-bar" placeholder="Search items..." @onchange="OnSearchTextChange">
			<select class="user-filter" @onchange="OnUserFilterChange">
				<option>All Users</option>
				@foreach (var user in Database.GetUsers())
				{
					<option>@user.Username</option>
				}
			</select>
			<select class="vendor-filter" @onchange="OnVendorFilterChange">
				<option>All Vendors</option>
				@foreach (var vendor in Database.GetVendors())
				{
					<option>@vendor.VendorName</option>
				}
			</select>
			<select class="category-filter" @onchange="OnCategoryFilterChange">
				<option>All Categories</option>
				@foreach (var category in Database.GetCategories())
				{
					<option>@category.CategoryName</option>
				}
			</select>
		</div>

		<div class="wishlist-grid">
			@foreach (var wishItem in Database.GetWishes())
			{
				<a href="#" class="wish-item">
					@if (IsLoggedIn)
					{
						<div class="item-actions">
							<button class="action-btn" @onclick="(() => EditWishItem(wishItem))"><i
									class="fas fa-pencil"></i></button>
							<button class="action-btn" @onclick="(() => DeleteWishItem(wishItem))"><i
									class="fas fa-trash"></i></button>
						</div>
					}
					<img src="@ImageResolver.GetImageUrl(wishItem.ImageName)" class="product-image"
						alt="@wishItem.ItemDescription">
					<div class="vendor">@(Database.GetVendorById(wishItem.VendorId)?.VendorName ??
										Models.Vendor.CreateUnspecified().VendorName)</div>
			<h3>@wishItem.ItemName</h3>
			<p>@wishItem.ItemDescription</p>
			<div class="price">@wishItem.ItemPrice.ToString(DisplayCurrencyType)</div>
		</a>
				}
		</div>

		<button class="add-item" @onclick="(() => AddWishItem())">+</button>
	</div>
}
catch (Exception ex)
{
	<p>Error: @ex.Message</p>
}